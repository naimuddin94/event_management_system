# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateFestivalInput {
  description: String!
  ends_at: String!
  image: String!
  location: String!
  name: String!
  starts_at: String!
}

input CreateScriptInput {
  description: String!
  image: String!
  title: String!
}

input CreateUserInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  userName: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type GetUsersPaginatedResponse {
  users: [GqlUser!]!
  usersCount: Int!
}

type GqlFestival {
  _id: String!
  createdAt: DateTime!
  description: String!
  ends_at: DateTime!
  image: String!
  location: String!
  name: String!
  starts_at: DateTime!
  updatedAt: DateTime!
  user: GqlUser!
}

type GqlScript {
  _id: String!
  author: GqlUser!
  createdAt: DateTime!
  description: String!
  image: String!
  title: String!
  updatedAt: DateTime!
}

type GqlUser {
  _id: String!
  createdAt: DateTime!
  email: String!
  firstName: String!
  googleId: String
  image: String!
  isVerified: Boolean!
  lastName: String!
  refreshToken: String
  role: String!
  status: String!
  updatedAt: DateTime!
  userName: String!
}

input LoginUserInput {
  email: String!
  password: String!
}

type LoginUserResponse {
  accessToken: String!
  refreshToken: String!
  user: GqlUser!
}

type Mutation {
  createFestival(createFestivalInput: CreateFestivalInput!): GqlFestival!
  createScript(createScriptInput: CreateScriptInput!): GqlScript!
  createUser(createUserInput: CreateUserInput!): GqlUser!
  refreshToken(refreshTokenInput: RefreshTokenInput!): RefreshTokenResponse!
  removeFestival(id: String!): GqlFestival!
  removeUser(id: String!): GqlUser!
  signIn(loginUserInput: LoginUserInput!): LoginUserResponse!
  signUp(signUpInput: CreateUserInput!): GqlUser!
  updateFestival(updateFestivalInput: UpdateFestivalInput!): GqlFestival!
  updateUser(updateUserInput: UpdateUserInput!): GqlUser!
}

type Query {
  festival(id: String!): GqlFestival!
  festivals: [GqlFestival!]!
  getAllUsers(limit: Int = 10, skip: Int = 0): GetUsersPaginatedResponse!
  getUserByEmail(email: String!): GqlUser!
  getUserById(id: String!): GqlUser!
}

input RefreshTokenInput {
  refreshToken: String!
}

type RefreshTokenResponse {
  accessToken: String!
}

input UpdateFestivalInput {
  description: String
  ends_at: String
  id: String!
  image: String
  location: String
  name: String
  starts_at: String
}

input UpdateUserInput {
  _id: String!
  firstName: String
  lastName: String
  userName: String
}